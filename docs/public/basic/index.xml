<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics :: R Wiki by hiroakif93</title>
    <link>http://localhost:1313/basic/index.html</link>
    <description></description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Mar 2025 11:33:22 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/basic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Object</title>
      <link>http://localhost:1313/basic/object/index.html</link>
      <pubDate>Sat, 15 Mar 2025 11:33:22 +0900</pubDate>
      <guid>http://localhost:1313/basic/object/index.html</guid>
      <description>オブジェクト オブジェクトとは 直感的な理解は、\ データ構造や処理結果を保存\ したもの. 以下では、Rが扱うデータ構造 = 型とクラスについて説明する.&#xA;–&#xA;Rで扱える型 文字型/character型 文字列を扱うための型. 文字を、シングルクォート（’）またはダブルクォート（&#34;）で囲むことで表現. 数字も、クォートで囲むと文字型として扱われる. 例：‘a’, ‘A’, ‘-’, ‘#’, ‘1’&#xA;数値型/numeric型, 整数型/integer型 数値を扱うための型。四則演算などが可能です.整数型は、小数点以下がない数値を扱うための型. 例：1, 2.0, 3.1415, 4, 5, 1+1, 4-1, 2*3, 4/2&#xA;“1”+“1&#34;は、１が文字列型になるため、計算できない. 論理型 論理型は、真偽値を扱うための型です。TRUEまたはFALSEの値を持ちます。&#xA;論理型は整数値でも表すことができ、TRUEは1、FALSEは0として扱われます。&#xA;–&#xA;Rのクラス ベクトル/vector&#xA;行列/matrix, array&#xA;データフレーム/data.frame&#xA;list</description>
    </item>
    <item>
      <title>Rの記法</title>
      <link>http://localhost:1313/basic/grammer/index.html</link>
      <pubDate>Sat, 15 Mar 2025 11:33:22 +0900</pubDate>
      <guid>http://localhost:1313/basic/grammer/index.html</guid>
      <description>代入 オブジェクトに値を代入するには、\ &lt;-\ または\ =\ を使う. ::&#xA;# 数値型を代入 x &lt;- 10 # xに10を代入 print(x) # xを表示 y = 20 # yに20を代入 print(y) # yを表示 # 数値型のオブジェクトを使った計算結果を代入 z &lt;- x+y # xとyを足した値をzに代入 print(z) # zを表示 オブジェクトからの値の取り出し方 オブジェクトからの値の取り出しかたには、オブジェクトのクラスによって異なる.&#xA;スカラー（ベクトルの長さが1のもの）のオブジェクトの場合、x自体が値を持つ. ::&#xA;x &lt;- 10 x ベクトルのオブジェクトの場合、x[1]のように、カギ括弧内で取り出したい位置（インデックス）を指定して取り出す. ベクトルに名前がついている時は、x[名前]と指定して値を取り出すことも可能. ::&#xA;x &lt;- c(1, 2, 3, 4, 5) # ベクトルを作成 names(x) &lt;- c(“a”, “b”, “c”, “d”, “e”) # ベクトルに名前をつける x[1] # 1番目の要素を取り出す x[2] # 2番目の要素を取り出す x[3] # 3番目の要素を取り出す</description>
    </item>
    <item>
      <title>ファイル/ディレクトリの操作</title>
      <link>http://localhost:1313/basic/file_operaion/index.html</link>
      <pubDate>Sat, 15 Mar 2025 11:33:22 +0900</pubDate>
      <guid>http://localhost:1313/basic/file_operaion/index.html</guid>
      <description>ディレクトリに関する操作 setwd 作業ディレクトリ(working directory)の変更::&#xA;# Windowsの例. ””内は、自分のフォルダを指定 setwd(&#34;C:/Users/username/Documents&#34;) # Macの例. ””内は、自分のフォルダを指定 setqwd(&#34;/Users/username/Documents&#34;) getwd 現在の作業ディレクトリ(working directory)の確認::&#xA;getwd() ファイルに関する操作 read.table ファイルの読み込み. 区切り文字を指定することができる::&#xA;# sep=&#34;&#34;で指定した文字を区切りにして、列に分割して読み込む df = read.table(&#34;data.txt&#34;, sep=&#34;\t&#34;, header=TRUE) # CSVファイルの読み込み df = read.table(&#34;data.csv&#34;, sep=&#34;,&#34;, header=TRUE) read.csv read.tableのWrapper関数. デフォルトの指定文字がスペースではなくカンマ(,)::&#xA;df = read.csv(&#34;data.csv&#34;, sep=&#34;,&#34;, header=TRUE)</description>
    </item>
  </channel>
</rss>